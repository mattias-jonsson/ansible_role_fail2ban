---

- name: Install fail2ban.conf from template.
  become: true
  ansible.builtin.template:
    src: fail2ban.conf.j2
    dest: /etc/fail2ban/fail2ban.conf
    mode: '0644'
    owner: root
    group: root

- name: Install jail.local from template.
  become: true
  ansible.builtin.template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    mode: '0644'
    owner: root
    group: root
  notify: Restart fail2ban

- name: Install paths-commmon from template.
  become: true
  ansible.builtin.template:
    src: "paths-common.conf.j2"
    dest: /etc/fail2ban/paths-common.conf
    mode: '0644'
    owner: root
    group: root
  notify: Restart fail2ban

- name: Install paths-fedora.conf from template.
  become: true
  ansible.builtin.template:
    src: paths-fedora.conf.j2
    dest: /etc/fail2ban/paths-fedora.conf
    mode: '0644'
    owner: root
    group: root
  when: ansible_os_family  == "RedHat"
  notify: Restart fail2ban


- name: Block for Debian based distributions.
  when: ansible_os_family  == "Debian"
  block:
    - name: Install paths-debian.conf from template.
      become: true
      ansible.builtin.template:
        src: paths-debian.conf.j2
        dest: /etc/fail2ban/paths-debian.conf
        mode: '0644'
        owner: root
        group: root
      notify: Restart fail2ban

    - name: Install paths-opensuse.conf from template.
      become: true
      ansible.builtin.template:
        src: paths-opensuse.conf.j2
        dest: /etc/fail2ban/paths-opensuse.conf
        mode: '0644'
        owner: root
        group: root
      notify: Restart fail2ban

    - name: Install paths-arch.conf from template.
      become: true
      ansible.builtin.template:
        src: paths-arch.conf.j2
        dest: /etc/fail2ban/paths-arch.conf
        mode: '0644'
        owner: root
        group: root
      notify: Restart fail2ban


- name: Install paths-overrides.local from template.
  become: true
  ansible.builtin.template:
    src: paths-overrides.local.j2
    dest: /etc/fail2ban/paths-overrides.local
    mode: '0644'
    owner: root
    group: root
  notify: Restart fail2ban

- name: Install jail.conf from template.
  become: true
  ansible.builtin.template:
    src: "jail.conf.j2"
    dest: /etc/fail2ban/jail.conf
    mode: '0644'
    owner: root
    group: root
  notify: Restart fail2ban

- name: Install jail.d templates from variables.
  become: true
  ansible.builtin.template:
    src: jail.d.local.j2
    dest: /etc/fail2ban/jail.d/{{ item.name | lower }}.local
    mode: '0644'
    owner: root
    group: root
  with_items: "{{ ansible_role_fail2ban_jails }}"
  when: item.enabled | lower | bool
  notify: Restart fail2ban
  register: ansible_role_fail2ban_jaildconfigs


- name: Block for cleanup.
  when: ansible_role_fail2ban_cleanup | lower | bool
  block:
    - name: Create list of jails.
      ansible.builtin.set_fact:
        ansible_role_fail2ban_cleanup_exclude: >
          "{{ ansible_role_fail2ban_cleanup_exclude }} + [ '/etc/fail2ban/jail.d/{{ item.name | lower }}.local' ]"
      with_items: "{{ ansible_role_fail2ban_jails }}"
      when: item.enabled | lower | bool
      vars:
        ansible_role_fail2ban_cleanup_exclude: []

    - name: Build list of unwanted files in conf.d directories.
      become: true
      ansible.builtin.find:
        paths:
          - /etc/fail2ban/fail2ban.d
          - /etc/fail2ban/jail.d
        file_type: any
        patterns:
          - .*\.conf$
          - .*\.local$
        use_regex: true
      register: ansible_role_fail2ban_unwanted_configs

    - name: Create cleanup-list.
      ansible.builtin.set_fact:
        ansible_role_fail2ban_cleanup_list: >
          "{{ ansible_role_fail2ban_unwanted_configs['files'] | json_query('[*].path') | list | difference(ansible_role_fail2ban_cleanup_exclude | list ) }}"

    - name: Cleanup conf.d directories.
      become: true
      ansible.builtin.shell: >
        mv "{{ item }}" "{{ item | dirname }}/{{ item | basename }}.{{ 99999 | random }}.{{ lookup('pipe', 'date +%Y-%m-%d@%H:%M:%S') }}.disabled"
      with_items: "{{ ansible_role_fail2ban_cleanup_list }}"
      when: ansible_role_fail2ban_cleanup_list | length > 0
      notify: Restart fail2ban
